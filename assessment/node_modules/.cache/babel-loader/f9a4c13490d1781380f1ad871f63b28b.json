{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chloe\\\\assessmentbandf\\\\EnterpriseFrontEndandBackEnd\\\\assessment\\\\src\\\\Components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Form, InputGroup, Row } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(_ref) {\n  _s();\n\n  let {\n    user,\n    setUser\n  } = _ref;\n  const [validated, setValidated] = useState(false);\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (user.username) {\n      setRedirect(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(() => {\n    if (redirect) {\n      navigate(\"/\");\n    } // eslint-disable-next-line\n\n  }, [redirect]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    setValidated(true);\n\n    if (form.checkValidity() === true) {\n      // Submit the form\n      const result = await axios({\n        method: 'post',\n        url: process.env.REACT_APP_API_URL + 'users/register',\n        data: {\n          username: username,\n          password: password,\n          confirmPassword: confirmPassword,\n          email: email\n        }\n      });\n\n      if (result.data.success) {\n        setUser(result.data.user);\n        setRedirect(true);\n      } else {\n        setError(result.data.error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    style: {\n      maxWidth: \"600px\",\n      padding: \"20px\",\n      margin: \"20px auto\"\n    },\n    validated: validated,\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"validationCustom01\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"validationCustom02\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          children: \"Accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        md: \"6\",\n        controlId: \"validationCustomUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          hasValidation: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \" Please enter a password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Register, \"4kjAegSvcQq1+PKGgDRXBh1FgKg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/chloe/assessmentbandf/EnterpriseFrontEndandBackEnd/assessment/src/Components/Register.jsx"],"names":["Button","Col","Form","InputGroup","Row","useEffect","useState","axios","useNavigate","Register","user","setUser","validated","setValidated","navigate","username","setUsername","password","setPassword","confirmPassword","email","setEmail","redirect","setRedirect","error","setError","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","checkValidity","result","method","url","process","env","REACT_APP_API_URL","data","success","maxWidth","padding","margin","color","e","target","value"],"mappings":"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","sourcesContent":["import {Button, Col, Form, InputGroup, Row} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function Register({user, setUser}) {\r\n    const [validated, setValidated] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (user.username) {\r\n            setRedirect(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (redirect) {\r\n            navigate(\"/\");\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [redirect]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const form = event.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if (form.checkValidity() === true) {\r\n            // Submit the form\r\n\r\n            const result = await axios({\r\n                method: 'post',\r\n                url: process.env.REACT_APP_API_URL + 'users/register',\r\n                data: {\r\n                    username: username,\r\n                    password: password,\r\n                    confirmPassword: confirmPassword,\r\n                    email: email\r\n                }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                setUser(result.data.user);\r\n                setRedirect(true);\r\n            } else {\r\n                setError(result.data.error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return <Form noValidate style={{maxWidth: \"600px\", padding: \"20px\", margin:\"20px auto\"}} validated={validated} onSubmit={handleSubmit}>\r\n        {error && <div style={{color: \"red\"}}>{error}</div>}\r\n        <Row className=\"mb-3\">\r\n            <Form.Group controlId=\"validationCustom01\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control required type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                <Form.Control.Feedback>Accepted</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"validationCustom02\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control required type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Form.Control.Feedback>Accepted</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group md=\"6\" controlId=\"validationCustomUsername\">\r\n                <Form.Label>Password</Form.Label>\r\n                <InputGroup hasValidation>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" required value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    <Form.Control.Feedback type=\"invalid\"> Please enter a password </Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n        </Row>\r\n        <Button type=\"submit\">Register</Button>\r\n    </Form>;\r\n}"]},"metadata":{},"sourceType":"module"}